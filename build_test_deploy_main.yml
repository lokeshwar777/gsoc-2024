name: Build, Test, and Deploy (Main)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm ci
          npm run clean  # where clean is "rm -rf dist/*" defined in package.json

      - name: Run Tests
        run: npm test || exit 1 # Exit with error code if tests fail

      - name: Build Production Artifact
        run: npm run build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./build

      - name: Deploy to Firebase Hosting (Staging)
        if: github.event_name == 'pull_request' # Only deploy to staging on pull requests
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to Firebase Hosting (Production)
        if: github.event_name == 'push' # Only deploy on direct pushes to main
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Build Docker image
        run: docker build -t my-app .

      - name: Push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: yourusername/my-app
          tag_with_ref: true

      - name: Configure Kubernetes credentials
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          enableClusterAdmin: true # Enable cluster admin permissions if necessary

      - name: Deploy to Kubernetes
        run: kubectl apply -f deployment.yaml # deployment.yaml is the Kubernetes deployment configuration file
